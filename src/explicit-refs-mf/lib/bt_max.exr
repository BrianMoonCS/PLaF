(* Max exercise *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; length <= 3} 
in letrec max(num1)=
proc(num2) {
    if num1<<num2
    then num2
    else num1
}
in letrec max_bt_helper(nd) = 
             if number?(nd)
          then 0
          else ((max nd.data) ((max (max_bt_helper nd.left)) (max_bt_helper nd.right)))
in let max_bt =  proc (t) { (max_bt_helper t.root) }
in (max_bt t1)